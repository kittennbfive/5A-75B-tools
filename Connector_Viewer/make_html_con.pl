#! /usr/bin/perl

=pod
This script creates result.htm.

PINS 4 AND 16 HARDCODED TO GND

(c) 2020-2022 by kittennbfive
AGPLv3+
THIS CODE IS PROVIDED WITHOUT ANY WARRANTY!
=cut

use strict;
use warnings FATAL=>'all';
use autodie;

open my $out, '>', 'result.htm';

print $out <<"END1";
<!DOCTYPE html>
<html>
<!-- AUTOGENERATED FILE - DO NOT EDIT -->

<!-- (c) 2020-2022 by kittennbfive -->
<!-- AGPLv3+ -->
<!-- NO WARRANTY! -->
<head>
<meta charset="utf-8" />
<title>5A-75B V7.0 ECP5 Connector View</title>
<style>
body { font-family: sans-serif;  }
table { width: 100%; font-size: 100%; }
table, td { border: 0px solid; border-collapse: collapse; }
.con_table  { border: 2px solid; border-collapse: collapse; text-align: center; }
.con_table td { border: 1px solid; border-collapse: collapse; }
.fpga { border: 2px solid; border-collapse: collapse; width: 50%; margin-left: auto; margin-right: auto; }
.gnd_pin { background-color: grey; }
</style>

<script src="data.js"></script>

<script>
var last=new Array();

function clear_current()
{
	var i;
	for(i=0; i<last.length; i++)
	{
		last[i].style.removeProperty("background-color");
	}
	
	last.length=0;
	
	document.getElementById("fpga_pin").innerHTML="...";
	document.getElementById("buffer").innerHTML="...";
	document.getElementById("bit").innerHTML="...";
}

function ev_click(e)
{
	clear_current();
	
	last.push(e.target);

	e.target.style="background-color: red;";
	
	var con=e.target.dataset.connector;
	var pin=e.target.dataset.pin;
	var buf;
	var bit;
	var fpga_pin;
	if(connectors.get(con).get(pin))
	{
		buf=connectors.get(con).get(pin).get("buffer");
		bit=connectors.get(con).get(pin).get("bit");
		fpga_pin=connectors.get(con).get(pin).get("fpga_pin");
	}
	else if(pin==4 || pin==16)
	{
		buf="GND";
		bit="GND";
		fpga_pin="GND";
	}
	else
	{
		alert("unknown pin "+pin+" for con "+con+" - Please report this bug!");
		return;
	}

	document.getElementById("fpga_pin").innerHTML=fpga_pin;
	document.getElementById("buffer").innerHTML=buf;
	document.getElementById("bit").innerHTML=bit;
	
	if(connectors.get(con).get(pin))
	{
		var con_direct=connectors.get(con).get(pin).get("directly_connected_to");
		var i;
		for(i=0; i<con_direct.length; i++)
		{
			var c=con_direct[i];
			var el=document.getElementById("pin_"+c);
			last.push(el);
			el.style="background-color: yellow;";
		}
		
		var con_fpga=connectors.get(con).get(pin).get("same_fpga_pin");
		for(i=0; i<con_fpga.length; i++)
		{
			var c=con_fpga[i];
			var el=document.getElementById("pin_"+c);
			last.push(el);
			el.style="background-color: green;";
		}
	}
}

function ev_highlight_buffer()
{
	clear_current();
	var buf=document.getElementById("select_buffer").value;
	var connections=buffer.get(buf);
	var i;
	for(i=0; i<connections.length; i++)
	{
		var el=document.getElementById(connections[i]);
		last.push(el);
		el.style="background-color: blue;";
	}
}

</script>
</head>

<body>
<h1>This is for 5A-75B V7.0 only and provided WITHOUT ANY WARRANTY!</h1>
<h3>Caution: JTAG is 3,3V but outputs on connectors are 5V!!</h3>
<noscript><p>This page needs Javascript.</p></noscript>
<table class="main_table">
	<tr>
END1

foreach my $con (qw/J4 J3 J2 J1/)
{
	make_connector($con, 'top');
}

print $out <<"END2";
	</tr>
	<tr>
		<td>LAN<br>LAN</td>
		<td colspan="2">
			<table class="fpga">
				<tr>
					<td style="font-weight: bold;">FPGA Pin:</td>
					<td id="fpga_pin" style="font-weight: bold;">...</td>
				</tr>
				<tr>
					<td>Buffer:</td>
					<td id="buffer">...</td>
				</tr>
				<tr>
					<td>Bit:</td>
					<td id="bit">...</td>
				</tr>
			</table>
		</td>
		<td style="text-align: right;">DRAM (U29)</td>
	</tr>
	<tr>
END2

foreach my $con (qw/J5 J6 J7 J8/)
{
	make_connector($con, 'bottom');
}

print $out <<"END3";
	</tr>
</table>
<p>Pins in grey are connected to GND.</p>

<div style="float: left;">
<form>
	<label for="select_buffer">Highlight all pins connected to buffer</label>
	<select name="select_buffer" id="select_buffer">
END3

foreach my $buf (qw/U9 U10 U12 U15 U17 U18 U20 U21 U22 U23 U24 U28/)
{
	print $out "\t\t\t<option value=\"$buf\">$buf</option>\n";
}

print $out <<"END4";
	</select>
	<input type="button" value="Do it!" id="highlight_button">
</form>
red: selected pin<br>yellow: direct connections<br>green: same FPGA-pin but through different buffer<br>blue: highlight buffer
</div>
<div style="float: right;">
<p>&copy; 2020-2022 by <a href="https://github.com/kittennbfive">kittennbfive</a> - AGPLv3+</p>
</div>
<script>
var pins=document.getElementsByClassName("con_pin");
var i;
for(i=0; i<pins.length; i++)
{
	pins[i].addEventListener("click", ev_click); 
}
document.getElementById("highlight_button").addEventListener("click", ev_highlight_buffer);
</script>
</body>
</html>
END4

########################################################################

sub make_connector
{
	my ($con, $pos)=(shift, shift);
	
	print $out "\t\t<td>\n";
	print $out "\t\t\t<div class=\"con_number\">$con</div>\n" if($pos eq 'top');
	print $out "\t\t\t<table class=\"con_table con_$con\">\n";
	print $out "\t\t\t\t<tr>\n";
	if($pos eq 'top')
	{
		make_pin($con, $_) foreach (reverse qw/1 3 5 7 9 11 13 15/);
	}
	else
	{
		make_pin($con, $_) foreach (qw/2 4 6 8 10 12 14 16/);
	}
	print $out "\t\t\t\t</tr>\n";
	print $out "\t\t\t\t<tr>\n";
	if($pos eq 'top')
	{
		make_pin($con, $_) foreach (reverse qw/2 4 6 8 10 12 14 16/);
	}
	else
	{
		make_pin($con, $_) foreach (qw/1 3 5 7 9 11 13 15/);
	}
	print $out "\t\t\t\t</tr>\n";
	print $out "\t\t\t</table>\n";
	print $out "\t\t\t<div class=\"con_number\">$con</div>\n" if($pos eq 'bottom');
	print $out "\t\t</td>\n";
}

sub make_pin
{
	my ($con, $pin)=(shift, shift);
	if($pin!=4 && $pin!=16)
	{
		print $out "\t\t\t\t\t","<td class=\"con_pin\" id=\"pin_$con"."_$pin\" data-connector=\"$con\" data-pin=\"$pin\">$pin</td>\n";
	}
	else
	{
		print $out "\t\t\t\t\t","<td class=\"con_pin gnd_pin\" id=\"pin_$con"."_$pin\" data-connector=\"$con\" data-pin=\"$pin\">$pin</td>\n";
	}
}
